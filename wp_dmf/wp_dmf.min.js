// developer: https://github.com/theoromeo
// have any feedback, let me know.
// thanks for using WP_dmf
class WP_dmf{constructor(t,e,o){return this.init(),t?e?(o?this.dataStoreFormName=o:console.warn(this.info.name+":\nNo dataStoreFormName defined. \nWill use default: \nUse value '"+this.dataStoreFormName+"' on $_POST[] to retrieve data "),this.objectRef=t,this.containerElement=document.getElementById(e),void this.createDataStoreField()):(console.error(this.info.name+":No Container Ref Passed"),0):(console.error(this.info.name+":No Object Ref Name Passed"),0)}init(){this.info={name:"wp_dmf",version:"1.0.0",defaultDataStoreFormName:"wp_dmf_dataStore",refToRootAtributeName:"wp_dmf_ref",rootAttributeName:"wp_dmf_root",definedFieldName:"dmf_field_name",fieldName:"dmf_name",dataStoreFormID:"wp_dmf_dataStore_init_align_none"},this.dataStore={},this.dataStoreForm="",this.containerElement="",this.fieldCount=0,this.definedFields={},this.objectRef="",this.dataStoreFormName=this.info.defaultDataStoreFormName}createDataStoreField(){this.dataStoreForm=document.createElement("input"),this.dataStoreForm.setAttribute("type","hidden"),this.dataStoreForm.setAttribute("name",this.dataStoreFormName),this.dataStoreForm.setAttribute("value",""),this.dataStoreForm.setAttribute("id",this.info.dataStoreFormID),this.containerElement.appendChild(this.dataStoreForm)}setValue(t,e,o){let i=document.querySelector("["+this.info.rootAttributeName+"='"+t+"']");if(i.querySelector("["+this.info.fieldName+'="'+e+'"]').value=o,null==this.dataStore[t]){let e=i.getAttribute(this.info.definedFieldName);this.info.definedFieldName;this.dataStore[t]={attr:e},console.log("dataStore:"),console.log(this.dataStore[t])}this.dataStore[t][e]=o,console.log(this.dataStore),this.dataStoreForm.value=JSON.stringify(this.dataStore)}addField(t){let e=document.createElement("div");return e.setAttribute(this.info.rootAttributeName,this.fieldCount),e.setAttribute(this.info.definedFieldName,t),e.innerHTML=this.definedFields[t],this.nodeFormat(e),this.fieldCount++,this.containerElement.insertAdjacentHTML("beforeend",e.outerHTML),e.getAttribute(this.info.rootAttributeName)}nodeFormat(t){t.querySelectorAll("input").forEach(t=>{t.tagName;t.setAttribute(this.info.refToRootAtributeName,this.fieldCount),t.setAttribute("onchange",this.objectRef+".store(this)")})}defineField(t,e){this.definedFields[t]=e}delete(t){try{document.querySelector("["+this.info.rootAttributeName+"='"+t+"']").remove(),delete this.dataStore[t]}catch(t){console.error(this.info.name+": ERROR\nThis index probably doesnt exist\n"+t)}}store(t){console.info("Saving data to form input");let e=t.getAttribute(this.info.refToRootAtributeName),o=t.getAttribute(this.info.fieldName),i=t.value;if(null==this.dataStore[e]){let t=document.querySelector("["+this.info.rootAttributeName+"='"+e+"']").getAttribute(this.info.definedFieldName);this.info.definedFieldName;this.dataStore[e]={attr:t}}this.dataStore[e][o]=i,console.log(this.dataStore),this.dataStoreForm.value=JSON.stringify(this.dataStore)}restore(t){if(t){let e=t,o=0;e=JSON.parse(e),e=Object.entries(e);for(let t in e)if(e.hasOwnProperty(t)){let i=e[t][1];for(let t in i){if(i.hasOwnProperty(t)){let e=i[t];console.log("iterdata is: "+e+" === "+t),"attr"==t?(o=this.addField(e),console.log("attr at Key 2:"+o)):(console.log("not attr "+t),this.setValue(o,t,e))}console.log("id: "+o)}console.log("-")}}}}